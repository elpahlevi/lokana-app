name: node.js CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install packages on client folder then build pages
        env:
          CI: false
        run: |
          cd client
          touch .env
          echo REACT_APP_REGISTER_API=${{secrets.REACT_APP_REGISTER_API}} >> .env
          echo REACT_APP_LOGIN_API=${{secrets.REACT_APP_LOGIN_API}} >> .env
          echo REACT_APP_REFRESH_API=${{secrets.REACT_APP_REFRESH_API}} >> .env
          echo REACT_APP_USER_API=${{secrets.REACT_APP_USER_API}} >> .env
          echo REACT_APP_EMAIL_API=${{secrets.REACT_APP_EMAIL_API}} >> .env
          echo REACT_APP_FORGOT_API=${{secrets.REACT_APP_FORGOT_API}} >> .env
          echo REACT_APP_RESET_API=${{secrets.REACT_APP_RESET_API}} >> .env
          echo REACT_APP_WRFGEN_API=${{secrets.REACT_APP_WRFGEN_API}} >> .env
          npm install 
          npm run build
      - name: Deploy the production to server
        run: |
          cd /var/www/lokana-app/_work/lokana-app/lokana-app
          touch .env
          echo DB_URI_DEV=${{secrets.DB_URI_DEV}} >> .env
          echo DB_URI_PROD=${{secrets.DB_URI_PROD}} >> .env
          echo ORIGIN=${{secrets.ORIGIN}} >> .env
          echo ACCESS_SECRET=${{secrets.ACCESS_SECRET}} >> .env
          echo REFRESH_SECRET=${{secrets.REFRESH_SECRET}} >> .env
          echo VERIFICATION_SECRET=${{secrets.VERIFICATION_SECRET}} >> .env
          echo RESET_SECRET=${{secrets.RESET_SECRET}} >> .env
          echo EMAIL_USER=${{secrets.EMAIL_USER}} >> .env
          echo EMAIL_PASS=${{secrets.EMAIL_PASS}} >> .env
          npm install
          pm2 stop lokana-app
          pm2 start lokana-app
          pm2 save
          sudo service nginx restart
          echo "Deployment success"
